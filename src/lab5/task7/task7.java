package lab5.task7;

import java.util.Objects;
import java.util.Random;
import java.util.Scanner;

public class task7 {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        Random random = new Random();

        int balance = 100;
        int bet;
        int win;
        String choice = "yes";

        System.out.println("–í—ñ—Ç–∞—î–º–æ —É –≥—Ä—ñ –°–ª–æ—Ç-–º–∞—à–∏–Ω–∞!");
        System.out.println("–ú–æ–∂–ª–∏–≤—ñ —Å–∏–º–≤–æ–ª–∏: üçí, üçã, üçä, üèÜ, ‚öì");
        System.out.println("----------------------------------");

        do {
            System.out.println("–í–∞—à –ø–æ—Ç–æ—á–Ω–∏–π –±–∞–ª–∞–Ω—Å: $" + balance);
            System.out.print("–í–≤–µ–¥—ñ—Ç—å —Å—Ç–∞–≤–∫—É: ");

            while (!scanner.hasNextInt()) {
                System.out.println("–ü–æ–º–∏–ª–∫–∞! –í–≤–µ–¥—ñ—Ç—å —á–∏—Å–ª–æ–≤–µ –∑–Ω–∞—á–µ–Ω–Ω—è");
                scanner.nextLine();
            }
            bet = scanner.nextInt();
            scanner.nextLine();

            if (bet <= 0) {
                System.out.println("–í–≤–µ–¥—ñ—Ç—å –∫–æ—Ä–µ–∫—Ç–Ω—É —Å—Ç–∞–≤–∫—É (–±—ñ–ª—å—à–µ 0)");
                continue;
            }
            if (bet > balance) {
                System.out.println("–ù–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ –∫–æ—à—Ç—ñ–≤");
                continue;
            }

            balance -= bet;

            String[] result = spinRow();
            printRow(result);

            win = getPayout(result, bet);
            balance += win;

            if (win > 0) {
                System.out.println("–í—ñ—Ç–∞—î–º–æ! –í–∏ –≤–∏–≥—Ä–∞–ª–∏ $" + win + "!");
            } else {
                System.out.println("–ù–∞ –∂–∞–ª—å, –≤–∏ –Ω–µ –≤–∏–≥—Ä–∞–ª–∏ —Ü—å–æ–≥–æ —Ä–∞–∑—É.");
            }

            System.out.println("–í–∞—à –ø–æ—Ç–æ—á–Ω–∏–π –±–∞–ª–∞–Ω—Å: $" + balance);

            if (balance == 0) {
                System.out.println("–í–∞—à –±–∞–ª–∞–Ω—Å –≤–∏—á–µ—Ä–ø–∞–Ω–æ. –ì—Ä–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞.");
                break;
            }

            System.out.println("–ë–∞–∂–∞—î—Ç–µ –ø—Ä–æ–¥–æ–≤–∂–∏—Ç–∏ –≥—Ä—É (yes/no)?");
            choice = scanner.nextLine().toLowerCase();

            while (!choice.equals("yes") && !choice.equals("no")) {
                System.out.println("–ü–æ–º–∏–ª–∫–∞! –û–±–µ—Ä—ñ—Ç—å yes –∞–±–æ no");
                System.out.println("–ë–∞–∂–∞—î—Ç–µ –ø—Ä–æ–¥–æ–≤–∂–∏—Ç–∏ –≥—Ä—É (yes/no)?");
                choice = scanner.nextLine().toLowerCase();
            }
        } while (choice.equals("yes"));

        System.out.println("–î—è–∫—É—î–º–æ –∑–∞ –≥—Ä—É! –í–∞—à —Ñ—ñ–Ω–∞–ª—å–Ω–∏–π –±–∞–ª–∞–Ω—Å: $" + balance);
        scanner.close();
    }

    static String[] spinRow() {
        Random random = new Random();
        String[] symbols = {"üçí", "üçã", "üçä", "üèÜ", "‚öì"};
        String[] result = new String[3];

        for (int i = 0; i < 3; i++) {
            result[i] = symbols[random.nextInt(symbols.length)];
        }

        return result;
    }

    static void printRow(String[] row) {
        System.out.println("-------------");
        System.out.println("| " + row[0] + " | " + row[1] + " | " + row[2] + " |");
        System.out.println("-------------");
    }

    static int getPayout(String[] row, int bet) {
        // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞ 3 –æ–¥–Ω–∞–∫–æ–≤—ñ —Å–∏–º–≤–æ–ª–∏
        if (row[0].equals(row[1]) && row[1].equals(row[2])) {
            switch (row[0]) {
                case "üçí": return bet * 3;
                case "üçã": return bet * 4;
                case "üçä": return bet * 5;
                case "üèÜ": return bet * 10;
                case "‚öì": return bet * 100;
                default: return 0;
            }
        }

        // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞ 2 –æ–¥–Ω–∞–∫–æ–≤—ñ —Å–∏–º–≤–æ–ª–∏
        if (row[0].equals(row[1]) || row[0].equals(row[2]) || row[1].equals(row[2])) {
            String symbol;
            if (row[0].equals(row[1]) || row[0].equals(row[2])) {
                symbol = row[0];
            } else {
                symbol = row[1];
            }

            switch (symbol) {
                case "üçí": return bet * 2;
                case "üçã": return bet * 3;
                case "üçä": return bet * 4;
                case "üèÜ": return bet * 5;
                case "‚öì": return bet * 6;
                default: return 0;
            }
        }

        return 0;
    }
}